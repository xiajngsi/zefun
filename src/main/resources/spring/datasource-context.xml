<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
      http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

  <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
    <!-- 慢SQL记录,超过2秒日志输出 -->
    <property name="slowSqlMillis" value="2000" />
      <property name="logSlowSql" value="true" />
  </bean>

  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />

      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="${jdbc.initialSize}" />
      <property name="minIdle" value="${jdbc.maxIdle}" />
      <property name="maxActive" value="${jdbc.maxActive}" />

      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="${jdbc.maxWait}" />

      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />

      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />

      <!-- 测试有效用的SQL Query -->
      <property name="validationQuery" value="SELECT 'x'" />
      <!-- 连接空闲时测试是否有效 -->
      <property name="testWhileIdle" value="true" />
      <!-- 获取连接时测试是否有效 -->
      <property name="testOnBorrow" value="true" />
      <!-- 归还连接时是否测试有效 -->
      <property name="testOnReturn" value="true" />

      <!-- 打开PSCache，并且指定每个连接上PSCache的大小
      分库分表较多的数据库，建议配置为false -->
      <property name="poolPreparedStatements" value="false" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

      <!-- 定期把监控数据输出到日志中 -->
      <!-- <property name="timeBetweenLogStatsMillis" value="300000" /> -->

      <property name="proxyFilters">
        <list>
          <!-- 配置监控统计拦截的filters -->
            <ref bean="stat-filter" />
        </list>
      </property>
  </bean>

  <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />
  <!-- PlatformTransactionMnager -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
  </bean>
  <!-- enable transaction annotation support -->
  <tx:annotation-driven transaction-manager="transactionManager" />

  <!-- mybatis分页拦截器 -->
  <bean id="pageInterceptor" class="com.zefun.web.interceptor.PageInterceptor" />

  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="plugins">
      <list>
        <ref bean="pageInterceptor" />
      </list>
    </property>
    <property name="mapperLocations" value="classpath*:sqlMap/*.xml"></property>
  </bean>
  <!-- mybatis mapper注入 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.zefun.web.mapper" />
  </bean>

</beans>
