<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.OrderInfo" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="appoint_off" property="appointOff" jdbcType="INTEGER" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="order_evaluate" property="orderEvaluate" jdbcType="VARCHAR" />
    <result column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="is_share" property="isShare" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="OrderBaseResultMap" type="com.zefun.web.dto.OrderInfoBaseDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="appoint_off" property="appointOff" jdbcType="INTEGER" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="order_evaluate" property="orderEvaluate" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <association property="orderDetailList" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectDetailListByOrderId" />
  </resultMap>
  
  <resultMap id="MemberOrderResultMap" type="com.zefun.web.dto.MemberOrderDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="is_share" property="isShare" jdbcType="INTEGER" />
    <association property="detailList" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectDetailListByOrderId" />
  </resultMap>
  
  <!-- 消费明细传输对象 -->
  <resultMap id="OrderPaymentMap" type="com.zefun.web.dto.OrderPaymentDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="appoint_off" property="appointOff" jdbcType="INTEGER" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <association property="detailList" column="order_id" select="selectPaymentDetailByOrderId"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    order_id, store_id, order_type, member_id, sex, dept_id, order_code, receivable_amount, 
    discount_amount, cash_amount, unionpay_amount, card_amount, gift_amount, wechat_amount, 
    alipay_amount, combo_amount, coupon_amount, appoint_off, free_amount, debt_amount, 
    real_amount, order_status, order_evaluate, appointment_id, is_share, is_deleted, 
    create_time, update_time, last_operator_id
  </sql>
  
  <!-- 查询某个订单消费明细数据 -->
  <select id="selectOrderPaymentByOrderId" resultMap="OrderPaymentMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId}
  </select>
  <select id="selectPaymentDetailByOrderId" resultType="com.zefun.web.dto.DetailPaymentDto" parameterType="java.lang.Integer">
    select
	    detail_id as detailId,
	    order_type as orderType,
	    is_appoint as isAppoint,
	    appoint_off as appointOff,
	    project_id as projectId,
	    project_name as projectName,
	    project_price as projectPrice,
	    project_count as projectCount,
	    real_price as realPrice,
	    discount_amount as discountAmount,
	    service_length as serviceLength,
	    case o.off_type 
	        when 1 then 
	            '套餐抵扣'
	        when 2 then 
	            '优惠券抵扣'
	        when 3 then 
	            '礼金抵扣'
	        else 
	            ''
	    end
	    as offName,
	    case o.off_type 
	        when 1 then 
	            o.project_price
	        when 2 then 
	            (select c2.coupon_price from coupon_info c2 where c2.coupon_id = o.coupon_id)
	        else 
	            o.gift_amount
	    end 
	    as offAmount
	from order_detail o 
	where order_id = #{orderId} 
	   and is_deleted = 0    
  </select>
  
  <select id="selectOrderListByMemberId" resultMap="MemberOrderResultMap" parameterType="java.lang.Integer">
    select 
        order_id, order_code, receivable_amount, discount_amount, cash_amount, unionpay_amount, 
        card_amount, combo_amount, coupon_amount, free_amount, debt_amount, real_amount, appointment_id, 
        is_share, order_status, update_time
    from order_info
    where member_id = #{memberId}
        and is_deleted = 0 
        order by create_time desc     
  </select>
  
  <select id="selectOrderStatisticsByStoreId" resultType="java.util.Map" parameterType="java.lang.Integer">
    select 
        count(1) as count,
        IFNULL(sum(receivable_amount),0) as money 
    from order_info 
    where store_id = #{storeId} 
        and order_status in (3, 4)
        and to_days(create_time) = to_days(now())
  </select>
  
  <select id="selectOrderStatisticsByEmployeeId" resultType="java.util.Map" parameterType="java.lang.Integer">
    select 
        count(1) as count,
        IFNULL(sum(receivable_amount),0) as money
    from order_info 
    where order_id in (
	    select 
	        distinct(oi.order_id) 
	    from shift_mahjong_project_step sms
	    left join order_detail od
	    on sms.detail_id = od.detail_id
	    left join order_info oi
	    on od.order_id = oi.order_id
	    where sms.employee_id = #{employeeId} 
	       and sms.is_deleted = 0 
	       and oi.order_status in (3, 4)
	       and to_days(oi.create_time) = to_days(now())
	 )
  </select>
  
  <select id="selectOrderIdByStoreIdNotOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select 
        order_id 
    from order_info 
    where store_id = #{storeId} 
        and order_status = 1 
        and is_deleted = 0
        order by create_time desc 
  </select>
  
  <select id="selectOrderIdByStoreIdIsOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select 
        order_id 
    from order_info 
    where store_id = #{storeId} 
	    and order_status in (2, 5)
	    and is_deleted = 0 
	    order by create_time desc 
  </select>
  
  <select id="selectOrderIdByStoreIdHistory" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select 
        order_id from order_info 
    where store_id = #{storeId} 
        and is_deleted = 0 
        and to_days(create_time) = to_days(now())
        and order_status in (3, 4)
        order by create_time desc 
  </select>
  
  <select id="selectOrderIdByEmployeeIdNotOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	select distinct(a.orderId) from (select 
											    oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
											from shift_mahjong_project_step sms
												left join order_detail od
												on sms.detail_id = od.detail_id
												left join order_info oi
											   on od.order_id = oi.order_id
											where sms.employee_id = #{employeeId}
											   and oi.is_deleted = 0 
											   and sms.is_deleted = 0 
											   and od.is_deleted = 0
											   and od.order_type = 1
											   and oi.order_status = 1
											   
										union
										
										select 
										  oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
										 from order_detail od 
										 left join order_info oi
											   on od.order_id = oi.order_id	   
										  where od.last_operator_id = #{employeeId} 
										      and od.is_deleted = 0	  
												and oi.is_deleted = 0  	   
												and od.order_type in (2, 3)
												and oi.order_status = 1
										) a order by a.orderStatus asc, a.createTime desc 
  </select>
  
  <select id="selectOrderIdByEmployeeIdIsOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	   select distinct(a.orderId) from (select 
											    oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
											from shift_mahjong_project_step sms
												left join order_detail od
												on sms.detail_id = od.detail_id
												left join order_info oi
											   on od.order_id = oi.order_id
											where sms.employee_id = #{employeeId}
											   and oi.is_deleted = 0 
											   and sms.is_deleted = 0 
											   and od.is_deleted = 0
											   and od.order_type = 1
											   and to_days(od.create_time) = to_days(now())
											   and oi.order_status in (2, 5) 
											   
										union
										
										select 
										  oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
										 from order_detail od 
										 left join order_info oi
											   on od.order_id = oi.order_id	   
										  where od.last_operator_id = #{employeeId} 
										      and od.is_deleted = 0	  
												and oi.is_deleted = 0  	  
												and to_days(od.create_time) = to_days(now()) 
												and od.order_type in (2, 3)
												and oi.order_status in (2, 5) 
										) a order by a.orderStatus asc, a.createTime desc 
  </select>
  
  <select id="selectOrderIdByEmployeeIdHistory" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	   select distinct(a.orderId) from (select 
											    oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
											from shift_mahjong_project_step sms
												left join order_detail od
												on sms.detail_id = od.detail_id
												left join order_info oi
											   on od.order_id = oi.order_id
											where sms.employee_id = #{employeeId}
											   and oi.is_deleted = 0 
											   and sms.is_deleted = 0 
											   and od.is_deleted = 0
											   and od.order_type = 1
											   and to_days(oi.create_time) &lt; to_days(now())
	                                           and oi.order_status in (3, 4)
											   
										union
										
										select 
										  oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
										 from order_detail od 
										 left join order_info oi
											   on od.order_id = oi.order_id	   
										  where od.last_operator_id = #{employeeId} 
										      and od.is_deleted = 0	  
											  and oi.is_deleted = 0  	   
											  and od.order_type in (2, 3)
											  and to_days(oi.create_time) &lt; to_days(now())
	                                          and oi.order_status in (3, 4)
										) a order by a.orderStatus asc, a.createTime desc 
  </select>
  
  <select id="selectOrderBaseByOrderId" resultMap="OrderBaseResultMap" parameterType="java.lang.Integer">
    select 
	    order_id, member_id, sex, dept_id, order_code, receivable_amount, discount_amount, cash_amount, unionpay_amount, gift_amount, appoint_off, wechat_amount, alipay_amount,
	    card_amount, combo_amount, coupon_amount, free_amount, debt_amount, real_amount, store_id, update_time,appointment_id,
	    order_evaluate, order_status
	from order_info
	where order_id = #{orderId}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId}
  </select>
  
  <select id="selectIsNotOver" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where is_deleted = 0 
        and order_status in (1, 2, 5) 
        and member_id = #{memberId}
  </select>
  
  <update id="updateEvaluateByOrderId" parameterType="com.zefun.web.entity.OrderInfo" >
    update order_info
    <set >
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="orderEvaluate != null" >
        order_evaluate = #{orderEvaluate,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId} and order_status = 3
  </update>
  
  <!-- 更新订单价格信息 -->
  <update id="updateTotalPrice" parameterType="java.lang.Integer" >
    update order_info a , (select sum(b.project_price * b.project_count) as price, sum(b.discount_amount * b.project_count) as discount from order_detail b where b.order_id = #{orderId,jdbcType=INTEGER} and b.is_deleted = 0) c
    set a.receivable_amount = c.price, a.discount_amount = c.discount where a.order_id  = #{orderId} 
  </update>
  
  <!-- 根据订单条件查询 -->
 <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where store_id = #{storeId,jdbcType=INTEGER} and is_deleted = 0 and order_status = 5
      <if test="beginDate != null and endDate != null" >
        and CAST(replace(create_time,'-','') as UNSIGNED) between #{beginDate,jdbcType=INTEGER} and #{endDate,jdbcType=INTEGER}
      </if>
      <if test="deptId != null" >
        and dept_id in 
        <foreach item="item" index="index" collection="deptId" open="("  
            separator="," close=")">  
            #{item}  
        </foreach>  
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=DECIMAL},
      </if>
  </select>
  
  <resultMap id="UnfinishedOrderInfoMap" type="com.zefun.web.dto.SelfCashierOrderDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <association property="memberName" column="member_id" select="com.zefun.web.mapper.MemberInfoMapper.selectMemberNameByMemberId"></association>
    <association property="operateEmployee" column="last_operator_id" select="com.zefun.web.mapper.EmployeeInfoMapper.selectBaseInfoByEmployeeId" />
    <association property="serverEmployee" column="last_server_id" select="com.zefun.web.mapper.EmployeeInfoMapper.selectBaseInfoByEmployeeId" />
    <collection property="orderDetails" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectSelfCashierDetailMahjong" />
  </resultMap>
  
  <!-- 查询自助收银模块的概要订单信息 by luhwen 2015.10.21 18:00:00 -->
  <select id="selectUnfinishedOrderInfo" resultMap="UnfinishedOrderInfoMap" parameterType="java.lang.Integer">
  	select 
  	 oi.order_id, 
  	 oi.member_id, 
  	 oi.order_code, 
  	 oi.sex, 
  	 oi.receivable_amount, 
  	 oi.discount_amount, 
  	 oi.free_amount, 
  	 oi.debt_amount, 
  	 oi.order_status, 
  	 oi.create_time,
  	 oi.last_operator_id,
  	 (select employee_id from shift_mahjong_project_step where employee_id is not null and detail_id in (select detail_id from order_detail where order_id = oi.order_id) order by is_over desc limit 0,1) as last_server_id
  	from order_info oi
  	where oi.store_id = #{storeId} 
 	 and oi.is_deleted = 0
 	 and oi.order_status in (1, 2, 5) 
  </select>
  
  <resultMap id="UnfinishedOrderDetailMap" type="com.zefun.web.dto.SelfCashierOrderDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR"/>
    <!-- 订单详情 -->
    <collection property="orderDetails" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectSelfCashierDetail" />
  </resultMap>
  
  <!-- 自助收银模块的订单详情 -->
  <select id="selectUnfinishedOrderDetail" resultMap="UnfinishedOrderDetailMap" parameterType="java.lang.Integer">
  	  select 
  	     a.order_id, a.member_id, a.dept_id, a.order_code,a.sex, a.receivable_amount, a.discount_amount, a.free_amount, a.debt_amount, a.order_status, a.create_time
      from order_info a
  	  where a.order_id = #{orderId}
  </select>
  
  <!-- 根据订单明细标识查询订单信息 -->
  <select id="selectByDetailId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select 
    <include refid="Base_Column_List" />
  	from order_info a 
  	where exists(select 1 from order_detail b where b.order_id = a.order_id and b.detail_id = #{detailId} and b.is_deleted = 0) and a.is_deleted = 0
  </select>
  
  <update id="updateOrderMemberInfo" parameterType="java.util.Map">
  	update order_info set member_id = #{memberId,jdbcType=INTEGER}
  		where order_id = #{orderId,jdbcType=INTEGER}
  			and member_id is null
  </update>
  
  <select id="selectCashierStatInfo" parameterType="java.util.Map" resultType="com.zefun.web.dto.SelfCashierStatDto">
  	select
  		sum(if(order_status = 1 or order_status = 2 or order_status = 5, 1, 0)) as unpayCount,
	    sum(if(order_status = 1 or order_status = 2 or order_status = 5, ifnull(discount_amount, 0), 0)) as unpayAmount,
	    sum(if(order_status = 3 or order_status = 4, 1, 0)) as payCount,
	    sum(if(order_status = 3 or order_status = 4, ifnull(discount_amount, 0), 0)) as payAmount
   from order_info 
   where
		store_id = #{storeId} 
		and create_time &gt;= #{starTime,jdbcType=CHAR} 
		and create_time &lt; #{endTime,jdbcType=CHAR}
		and is_deleted = 0
  </select>
  
  <resultMap id="DayBookResultMap" type="com.zefun.web.dto.DayBookDto" >
  	<id column="order_id" property="orderId" jdbcType="INTEGER" />
  	<result column="member_id" property="memberId" jdbcType="INTEGER" />
  	<result column="sex" property="sex" jdbcType="CHAR" />
  	<result column="order_code" property="orderCode" jdbcType="INTEGER" />
  	<result column="discount_amount" property="realPrice" jdbcType="DECIMAL" />
  	<result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
  	<result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
  	<result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
  	<result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
  	<result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
  	<result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
  	<result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
  	<result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
  	<result column="free_amount" property="freeAmount" jdbcType="CHAR" />
  	<result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
  	<result column="create_time" property="createTime" jdbcType="CHAR" />
  	<association property="memberName" column="member_id" select="com.zefun.web.mapper.MemberInfoMapper.selectMemberNameByMemberId"></association>
  	<association property="projectName" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectOrderDetailNameByOrderId"></association>
  </resultMap>
  
  <sql id="selectDayBookInfo">
  	from order_info
  	  	<where>
  	  		store_id = #{storeId} and (order_status = 3 or order_status = 4) and is_deleted = 0
	  	  	   <if test="beginTime != null">
		  	  	    and create_time &gt;= #{beginTime}
	  	  	   </if>
	  	  	   <if test="endTime != null">
		  	  	    and create_time &lt;= #{endTime}
	  	  	   </if>
	  	  	   <if test="queryCode != null and queryCode != ''">
	  	  	   	  and (order_code like CONCAT('%',#{queryCode,jdbcType=INTEGER},'%')
	  	  	   	  or member_id = (select member_id from member_info where store_id = #{storeId,jdbcType=INTEGER}
	  	  	   	  	        and phone = #{queryCode,jdbcType=INTEGER})
	  	  	   	  )
	  	  	   </if>
  	  	   </where>
  </sql>
  <select id="selectDayBookInfoList" parameterType="com.zefun.web.dto.DayBookQueryDto" resultMap="DayBookResultMap">
  	select order_id, member_id, sex, order_code, ifnull(discount_amount, 0) as discount_amount,
  		ifnull(gift_amount, 0) as gift_amount, ifnull(cash_amount, 0) as cash_amount,
  		ifnull(unionpay_amount, 0) as unionpay_amount, ifnull(card_amount, 0) as card_amount,
  		ifnull(wechat_amount, 0) as wechat_amount, ifnull(alipay_amount, 0) as alipay_amount,
  		ifnull(combo_amount,0) as combo_amount, ifnull(coupon_amount, 0) as coupon_amount, 
  		ifnull(free_amount, 0) as free_amount, ifnull(debt_amount, 0) as debt_amount,
  		DATE_FORMAT(create_time,'%Y-%m-%d %H:%i') as create_time
  	  		<include refid="selectDayBookInfo" />
	  	  	   <choose>
	  	  	   	<when test="direct == 2">
	  	  	   		order by create_time
	  	  	   	</when>
	  	  	   	<otherwise>
	  	  	   		order by create_time desc
	  	  	   	</otherwise>
	  	  	   </choose>
  	  	   limit #{pageNo}, #{pageSize}
  </select>
  
  <select id="selectDayBookInfoCount" parameterType="com.zefun.web.dto.DayBookQueryDto" resultType="com.zefun.web.dto.DayBookDto" >
  	select 
  	 ifnull(sum(discount_amount), 0) as receivableAmount,
     ifnull(sum(real_amount), 0) as realPrice,
     ifnull(sum(cash_amount), 0) as cashAmount, 
     ifnull(sum(unionpay_amount), 0) as unionpayAmount, 
     ifnull(sum(card_amount), 0) as cardAmount, 
     ifnull(sum(wechat_amount), 0) as wechatAmount, 
     ifnull(sum(alipay_amount), 0) as alipayAmount, 
     ifnull(sum(combo_amount), 0) as comboAmount, 
     ifnull(sum(gift_amount), 0) as giftAmount, 
     ifnull(sum(coupon_amount), 0) as couponAmount, 
     ifnull(sum(free_amount), 0) as freeAmount, 
     ifnull(sum(debt_amount), 0) as debtAmount,
  	 count(1) as count
  	 from order_info
        <where>
            store_id = #{storeId} 
            and (order_status = 3 or order_status = 4) 
            and is_deleted = 0
               <if test="beginTime != null">
                    and create_time &gt;= #{beginTime}
               </if>
               <if test="endTime != null">
                    and create_time &lt;= #{endTime}
               </if>
           </where>
  </select>
  
  <select id="selectDetailCountForType" parameterType="com.zefun.web.dto.DayBookQueryDto" resultType="java.util.Map">
    select 
        order_type as orderType, sum(project_price) as projectPrice, sum(real_price) as realPrice, count(1) as count
    from order_detail
        <where>
              order_id in (select order_id from order_info where store_id = #{storeId} and order_status in (3 ,4) and is_deleted = 0
               <if test="beginTime != null">
                    and create_time &gt;= #{beginTime}
               </if>
               <if test="endTime != null">
                    and create_time &lt;= #{endTime}
               </if>
               )
           </where>
    group by order_type
  </select>
  
  <select id="selectDayBookStat" parameterType="com.zefun.web.dto.DayBookQueryDto" resultType="com.zefun.web.dto.DayBookStatDto">
  	select ifnull(sum(if(order_status = 1, 0, 1)),0) as projectAmount,
  		   ifnull(sum(if(order_status = 2, 0, 1)),0) as goodsAmount,
  		   ifnull(sum(if(order_status = 3, 0, 1)),0) as comboAmount,
  		   ifnull(sum(if(order_status = 4, 0, 1)),0) as cardAmount
  		from order_detail
  	  where order_id in (select order_id <include refid="selectDayBookInfo" />)
  </select>
  
  <update id="updateOrderShare" parameterType="java.lang.Integer">
    update order_info set is_share = 1
        where order_id = #{orderId,jdbcType=INTEGER}
            and is_share = 0
  </update>
  
  
  <update id="updateFreeAmount" parameterType="java.lang.Integer">
    update order_info a set a.free_amount = (select sum(c.free_amount) from order_detail c where c.order_id = a.order_id and c.is_deleted = 0)
    where a.is_deleted = 0 and exists(select 1 from order_detail b where b.detail_id = #{detailId,jdbcType=INTEGER} and b.order_id = a.order_id and b.is_deleted = 0)
  </update>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_info where order_id = #{orderId}
  </delete>
  
  <insert id="insert" parameterType="com.zefun.web.entity.OrderInfo" useGeneratedKeys = "true" keyProperty="orderId">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="receivableAmount != null" >
        receivable_amount,
      </if>
      <if test="discountAmount != null" >
        discount_amount,
      </if>
      <if test="cashAmount != null" >
        cash_amount,
      </if>
      <if test="unionpayAmount != null" >
        unionpay_amount,
      </if>
      <if test="cardAmount != null" >
        card_amount,
      </if>
      <if test="giftAmount != null" >
        gift_amount,
      </if>
      <if test="wechatAmount != null" >
        wechat_amount,
      </if>
      <if test="alipayAmount != null" >
        alipay_amount,
      </if>
      <if test="comboAmount != null" >
        combo_amount,
      </if>
      <if test="couponAmount != null" >
        coupon_amount,
      </if>
      <if test="appointOff != null" >
        appoint_off,
      </if>
      <if test="freeAmount != null" >
        free_amount,
      </if>
      <if test="debtAmount != null" >
        debt_amount,
      </if>
      <if test="realAmount != null" >
        real_amount,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
      <if test="appointmentId != null" >
        appointment_id,
      </if>
      <if test="orderEvaluate != null" >
        order_evaluate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=CHAR},
      </if>
      <if test="receivableAmount != null" >
        #{receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashAmount != null" >
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="unionpayAmount != null" >
        #{unionpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardAmount != null" >
        #{cardAmount,jdbcType=DECIMAL},
      </if>
      <if test="giftAmount != null" >
        #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="wechatAmount != null" >
        #{wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="alipayAmount != null" >
        #{alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="comboAmount != null" >
        #{comboAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null" >
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="appointOff != null" >
        #{appointOff,jdbcType=INTEGER},
      </if>
      <if test="freeAmount != null" >
        #{freeAmount,jdbcType=CHAR},
      </if>
      <if test="debtAmount != null" >
        #{debtAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="appointmentId != null" >
        #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="orderEvaluate != null" >
        #{orderEvaluate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.OrderInfo" >
    update order_info
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=CHAR},
      </if>
      <if test="receivableAmount != null" >
        receivable_amount = #{receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashAmount != null" >
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="unionpayAmount != null" >
        unionpay_amount = #{unionpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardAmount != null" >
        card_amount = #{cardAmount,jdbcType=DECIMAL},
      </if>
      <if test="giftAmount != null" >
        gift_amount = #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="wechatAmount != null" >
        wechat_amount = #{wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="alipayAmount != null" >
        alipay_amount = #{alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="comboAmount != null" >
        combo_amount = #{comboAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null" >
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="appointOff != null" >
        appoint_off = #{appointOff,jdbcType=INTEGER},
      </if>
      <if test="freeAmount != null" >
        free_amount = #{freeAmount,jdbcType=CHAR},
      </if>
      <if test="debtAmount != null" >
        debt_amount = #{debtAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderEvaluate != null" >
        order_evaluate = #{orderEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="appointmentId != null" >
        appointment_id = #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="isShare != null" >
        is_share = #{isShare,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>