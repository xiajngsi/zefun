<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.ShiftMahjongMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.ShiftMahjong" >
    <id column="shift_mahjong_id" property="shiftMahjongId" jdbcType="INTEGER" />
    <result column="shift_mahjong_name" property="shiftMahjongName" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="shift_mahjong_up" property="shiftMahjongUp" jdbcType="INTEGER" />
    <result column="shift_mahjong_rule" property="shiftMahjongRule" jdbcType="INTEGER" />
    <result column="nature" property="nature" jdbcType="INTEGER" />
    <result column="appoint_number" property="appointNumber" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="ShiftMahjongDtoMap" type="com.zefun.web.dto.ShiftMahjongDto" >
    <id column="shift_mahjong_id" property="shiftMahjongId" jdbcType="INTEGER" />
    <result column="shift_mahjong_name" property="shiftMahjongName" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="shift_mahjong_up" property="shiftMahjongUp" jdbcType="INTEGER" />
    <result column="shift_mahjong_rule" property="shiftMahjongRule" jdbcType="INTEGER" />
    <result column="nature" property="nature" jdbcType="INTEGER" />
    <result column="appoint_number" property="appointNumber" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <association property="shiftMahjongEmployeeList"  column="shift_mahjong_id" select="com.zefun.web.mapper.ShiftMahjongEmployeeMapper.selectByShiftMahjongId"></association>
  </resultMap>
  
  <sql id="Base_Column_List" >
    shift_mahjong_id, shift_mahjong_name, store_id, dept_id, shift_mahjong_up, shift_mahjong_rule, nature, 
    appoint_number, create_time, operator_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    *
    from shift_mahjong
    where shift_mahjong_id = #{shiftMahjongId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByShiftMahjongIdDto" resultMap="ShiftMahjongDtoMap" parameterType="java.lang.Integer" >
    select 
    *
    from shift_mahjong
    where shift_mahjong_id = #{shiftMahjongId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shift_mahjong
    where shift_mahjong_id = #{shiftMahjongId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.ShiftMahjong" useGeneratedKeys = "true" keyProperty="shiftMahjongId">
    insert into shift_mahjong (shift_mahjong_id, shift_mahjong_name, 
      store_id, dept_id, shift_mahjong_up, shift_mahjong_rule, nature, 
      appoint_number, create_time, operator_id
      )
    values (#{shiftMahjongId,jdbcType=INTEGER}, #{shiftMahjongName,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=INTEGER},#{deptId,jdbcType=INTEGER}, #{shiftMahjongUp,jdbcType=INTEGER}, #{shiftMahjongRule,jdbcType=INTEGER}, #{nature,jdbcType=INTEGER}, 
      #{appointNumber,jdbcType=INTEGER}, #{createTime,jdbcType=CHAR}, #{operatorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.ShiftMahjong" >
    insert into shift_mahjong
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shiftMahjongId != null" >
        shift_mahjong_id,
      </if>
      <if test="shiftMahjongName != null" >
        shift_mahjong_name,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="shiftMahjongUp != null" >
        shift_mahjong_up,
      </if>
      <if test="shiftMahjongRule != null" >
        shift_mahjong_rule,
      </if>
      <if test="nature != null" >
        nature,
      </if>
      <if test="appointNumber != null" >
        appoint_number,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shiftMahjongId != null" >
        #{shiftMahjongId,jdbcType=INTEGER},
      </if>
      <if test="shiftMahjongName != null" >
        #{shiftMahjongName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="shiftMahjongUp != null" >
        #{shiftMahjongUp,jdbcType=INTEGER},
      </if>
      <if test="shiftMahjongRule != null" >
        #{shiftMahjongRule,jdbcType=INTEGER},
      </if>
      <if test="nature != null" >
        #{nature,jdbcType=INTEGER},
      </if>
      <if test="appointNumber != null" >
        #{appointNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.ShiftMahjong" >
    update shift_mahjong
    <set >
      <if test="shiftMahjongName != null" >
        shift_mahjong_name = #{shiftMahjongName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="shiftMahjongUp != null" >
        shift_mahjong_up = #{shiftMahjongUp,jdbcType=INTEGER},
      </if>
      <if test="shiftMahjongRule != null" >
        shift_mahjong_rule = #{shiftMahjongRule,jdbcType=INTEGER},
      </if>
      <if test="nature != null" >
        nature = #{nature,jdbcType=INTEGER},
      </if>
      <if test="appointNumber != null" >
        appoint_number = #{appointNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
    </set>
    where shift_mahjong_id = #{shiftMahjongId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.ShiftMahjong" >
    update shift_mahjong
    set shift_mahjong_name = #{shiftMahjongName,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      shift_mahjong_up = #{shiftMahjongUp,jdbcType=INTEGER},
      shift_mahjong_rule = #{shiftMahjongRule,jdbcType=INTEGER},
      nature = #{nature,jdbcType=INTEGER},
      appoint_number = #{appointNumber,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=CHAR},
      operator_id = #{operatorId,jdbcType=INTEGER}
    where shift_mahjong_id = #{shiftMahjongId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByDeptId" resultMap="ShiftMahjongDtoMap" parameterType="java.lang.Integer" >
    select 
    *
    from shift_mahjong
    where dept_id = #{deptId,jdbcType=INTEGER} order by shift_mahjong_id
  </select>
  
  <select id="selectByStoreId" resultMap="ShiftMahjongDtoMap" parameterType="java.lang.Integer" >
    select 
    *
    from shift_mahjong
    where store_id = #{storeId,jdbcType=INTEGER} order by shift_mahjong_id
  </select>
  
  <!-- 根据轮牌员工信息标识查询轮牌信息 -->
  <select id="selectByShiftMahjongEmployeeId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from shift_mahjong a where exists(select 1 from shift_mahjong_employee b 
    where a.shift_mahjong_id = b.shift_mahjong_id and b.shift_mahjong_employee_id = #{shiftMahjongEmployeeId,jdbcType=INTEGER})
  </select>
  
  <!-- 根据项目标识查询该项目对应排位，并将排位名称修改为步骤名称 -->
  <select id="selectByProjectId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select a.shift_mahjong_id as shiftMahjongId, b.project_step_name AS shiftMahjongName from shift_mahjong a, project_step b where a.shift_mahjong_id = b.shift_mahjong_id 
    and b.project_id = #{projectId,jdbcType=INTEGER} and b.is_deleted = 0 order by b.project_step_order
  </select>
  
  <!-- 根据员工标识查询轮牌信息 -->
  <select id="selectByEmployeeId" resultMap="ShiftMahjongDtoMap" parameterType="java.lang.Integer" >
    select * from shift_mahjong a where exists(select 1 from shift_mahjong_employee b 
    where a.shift_mahjong_id = b.shift_mahjong_id and b.employees_id = #{employeesId,jdbcType=INTEGER})
  </select>
  
  <select id="selectByPositionId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
        * 
    from shift_mahjong a 
    where 
       a.shift_mahjong_id in (
                               select 
                                   b.shift_mahjong_id 
                               from shift_mahjong_employee b 
                               where 
                                   b.level_id in (
                                                  select c.level_id from employee_level c where c.position_id = #{positionId,jdbcType=INTEGER}
                                                  ))
  </select>
  
</mapper>