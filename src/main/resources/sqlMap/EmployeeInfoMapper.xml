<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.EmployeeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.EmployeeInfo" >
    <id column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="recommend_id" property="recommendId" jdbcType="INTEGER" />
    <result column="employee_code" property="employeeCode" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="head_image" property="headImage" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="CHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="identity_card" property="identityCard" jdbcType="VARCHAR" />
    <result column="health_card" property="healthCard" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="emergency_phone" property="emergencyPhone" jdbcType="VARCHAR" />
    <result column="base_salaries" property="baseSalaries" jdbcType="INTEGER" />
    <result column="position_salaries" property="positionSalaries" jdbcType="INTEGER" />
    <result column="employee_status" property="employeeStatus" jdbcType="VARCHAR" />
    <result column="entry_date" property="entryDate" jdbcType="CHAR" />
    <result column="leave_date" property="leaveDate" jdbcType="CHAR" />
    <result column="service_peoples" property="servicePeoples" jdbcType="INTEGER" />
    <result column="service_count" property="serviceCount" jdbcType="INTEGER" />
    <result column="service_score" property="serviceScore" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
    <result column="accredit_code" property="accreditCode" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    employee_id, store_id, dept_id, position_id, level_id, recommend_id, employee_code, 
    name, head_image, sex, birthday, phone, identity_card, health_card, address, emergency_phone, 
    base_salaries, position_salaries, employee_status, entry_date, leave_date, service_peoples, 
    service_count, service_score, create_time, update_time, is_deleted, last_operator_id, 
    accredit_code, username, password, salt
  </sql>
  
  <!-- 根据员工标识查询员工基础信息 by 张进军 -->
  <select id="selectBaseInfoByEmployeeId" resultType="com.zefun.web.dto.EmployeeBaseDto" parameterType="java.lang.Integer">
    select 
	    e.employee_id as employeeId,
	    e.store_id as storeId,
	    s.store_type as storeType,
	    s.store_name as storeName,
	    (select level_name from employee_level where level_id = e.level_id) as levelName,
	    e.employee_code as employeeCode,
	    name,
	    head_image as headImage,
	    sex,
	    service_peoples as servicePeoples,
	    service_count as serviceCount,
	    service_score as serviceScore
	from employee_info e 
	inner join store_info s
	on e.store_id = s.store_id
	where e.employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  
  <select id="selectEmployeeListByStoreId" parameterType="java.lang.Integer" resultType="com.zefun.web.dto.EmployeeBaseDto">
    select 
        e.employee_id as employeeId,
        (select level_name from employee_level where level_id = e.level_id) as levelName,
        e.employee_code as employeeCode,
        name,
        head_image as headImage,
        sex,
        service_peoples as servicePeoples,
        service_count as serviceCount,
        service_score as serviceScore 
    from employee_info e
    where store_id = #{storeId} and e.level_id in (select level_id from project_commission where is_deleted = 0)
  </select>
  
  <select id="selectEmployeeListByList" resultType="com.zefun.web.dto.EmployeeBaseDto">
    select 
        e.employee_id as employeeId,
        (select level_name from employee_level where level_id = e.level_id) as levelName,
        e.employee_code as employeeCode,
        name,
        head_image as headImage,
        sex,
        service_peoples as servicePeoples,
        service_count as serviceCount,
        service_score as serviceScore 
    from employee_info e
    where e.employee_id in 
        <foreach collection="list" item="employeeId" index="index"
            open="(" close=")" separator=",">
            #{employeeId}
        </foreach>
  </select>
  
  <select id="queryEmployeeInfo"  parameterType="com.zefun.web.entity.Page" resultType="com.zefun.web.dto.EmployeeDto">
     SELECT t.employee_id employeeId,t.employee_code employeeCode,d.dept_name deptName,t.name,p.position_name positionName,
     l.level_name levelName,t.sex,t.phone,t.entry_date entryDate,t.employee_status employeeStatus,
     t.base_salaries baseSalaries,u.user_name userName,t.employee_desc employeeDesc
     from employee_info t 
	LEFT JOIN position_info p ON p.position_id=t.position_id
	LEFT JOIN employee_level l ON l.level_id=t.level_id
	LEFT JOIN user_account u ON u.user_id=t.employee_id  
	LEFT JOIN dept_info d ON d.dept_id=t.dept_id where t.dept_id>0
	<if test="params.positionId != null and params.positionId !=''">
	 and t.position_id=#{params.positionId}
	</if>
	<if test="params.search != null and params.search !=''">
	 and (t.employee_code like concat('%',#{params.search},'%') or t.name like concat('%',#{params.search},'%') or t.phone like concat('%',#{params.search},'%'))
	</if>
	and t.is_deleted=0 and t.store_id=#{params.storeId}
	
   </select>
   
   <select id="getRecommendlist" parameterType="java.lang.Integer" resultType="com.zefun.web.entity.EmployeeInfo">
   select employee_id employeeId, employee_code employeeCode,name from employee_info where  store_id = #{storeId} and is_deleted=0 and dept_id>0
   </select>
   
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_info
    where employee_id = #{employeeId,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByLevelId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from employee_info
    where store_id = #{storeId,jdbcType=INTEGER} and level_id = #{levelId,jdbcType=INTEGER} and is_deleted = 0 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_info
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertSelective" parameterType="com.zefun.web.entity.EmployeeInfo" >
    insert into employee_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="recommendId != null" >
        recommend_id,
      </if>
      <if test="employeeCode != null" >
        employee_code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="headImage != null" >
        head_image,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="identityCard != null" >
        identity_card,
      </if>
      <if test="healthCard != null" >
        health_card,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="emergencyPhone != null" >
        emergency_phone,
      </if>
      <if test="baseSalaries != null" >
        base_salaries,
      </if>
      <if test="positionSalaries != null" >
        position_salaries,
      </if>
      <if test="employeeStatus != null" >
        employee_status,
      </if>
      <if test="entryDate != null" >
        entry_date,
      </if>
      <if test="leaveDate != null" >
        leave_date,
      </if>
      <if test="servicePeoples != null" >
        service_peoples,
      </if>
      <if test="serviceCount != null" >
        service_count,
      </if>
      <if test="serviceScore != null" >
        service_score,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
      <if test="accreditCode != null" >
        accredit_code,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="employeeDesc != null" >
        employee_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null" >
        #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="employeeCode != null" >
        #{employeeCode,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null" >
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="healthCard != null" >
        #{healthCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPhone != null" >
        #{emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="baseSalaries != null" >
        #{baseSalaries,jdbcType=INTEGER},
      </if>
      <if test="positionSalaries != null" >
        #{positionSalaries,jdbcType=INTEGER},
      </if>
      <if test="employeeStatus != null" >
        #{employeeStatus,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null" >
        #{entryDate,jdbcType=CHAR},
      </if>
      <if test="leaveDate != null" >
        #{leaveDate,jdbcType=CHAR},
      </if>
      <if test="servicePeoples != null" >
        #{servicePeoples,jdbcType=INTEGER},
      </if>
      <if test="serviceCount != null" >
        #{serviceCount,jdbcType=INTEGER},
      </if>
      <if test="serviceScore != null" >
        #{serviceScore,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="accreditCode != null" >
        #{accreditCode,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="employeeDesc != null" >
        #{employeeDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.EmployeeInfo" >
    update employee_info
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null" >
        recommend_id = #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="employeeCode != null" >
        employee_code = #{employeeCode,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null" >
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="healthCard != null" >
        health_card = #{healthCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPhone != null" >
        emergency_phone = #{emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="baseSalaries != null" >
        base_salaries = #{baseSalaries,jdbcType=INTEGER},
      </if>
      <if test="positionSalaries != null" >
        position_salaries = #{positionSalaries,jdbcType=INTEGER},
      </if>
      <if test="employeeStatus != null" >
        employee_status = #{employeeStatus,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null" >
        entry_date = #{entryDate,jdbcType=CHAR},
      </if>
      <if test="leaveDate != null" >
        leave_date = #{leaveDate,jdbcType=CHAR},
      </if>
      <if test="servicePeoples != null" >
        service_peoples = #{servicePeoples,jdbcType=INTEGER},
      </if>
      <if test="serviceCount != null" >
        service_count = #{serviceCount,jdbcType=INTEGER},
      </if>
      <if test="serviceScore != null" >
        service_score = #{serviceScore,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="accreditCode != null" >
        accredit_code = #{accreditCode,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="employeeDesc != null" >
        employee_desc = #{employeeDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  
  <insert id="insert" parameterType="com.zefun.web.dto.EmployeeDto" useGeneratedKeys = "true" keyProperty="employeeId">
    insert into employee_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="recommendId != null and recommendId != ''" >
        recommend_id,
      </if>
      <if test="employeeCode != null" >
        employee_code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="headImage != null" >
        head_image,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="identityCard != null" >
        identity_card,
      </if>
      <if test="healthCard != null" >
        health_card,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="emergencyPhone != null" >
        emergency_phone,
      </if>
      <if test="baseSalaries != null" >
        base_salaries,
      </if>
      <if test="positionSalaries != null" >
        position_salaries,
      </if>
      <if test="employeeStatus != null" >
        employee_status,
      </if>
      <if test="entryDate != null" >
        entry_date,
      </if>
      <if test="leaveDate != null" >
        leave_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
      <if test="accreditCode != null" >
        accredit_code,
      </if>
     
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null and recommendId != ''" >
        #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="employeeCode != null" >
        #{employeeCode,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null" >
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="healthCard != null" >
        #{healthCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPhone != null" >
        #{emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="baseSalaries != null" >
        #{baseSalaries,jdbcType=INTEGER},
      </if>
      <if test="positionSalaries != null" >
        #{positionSalaries,jdbcType=INTEGER},
      </if>
      <if test="employeeStatus != null" >
        #{employeeStatus,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null" >
        #{entryDate,jdbcType=CHAR},
      </if>
      <if test="leaveDate != null" >
        #{leaveDate,jdbcType=CHAR},
      </if>
      
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="accreditCode != null" >
        #{accreditCode,jdbcType=INTEGER},
      </if>
      
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.dto.EmployeeDto" >
    update employee_info
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null" >
        recommend_id = #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="employeeCode != null" >
        employee_code = #{employeeCode,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null" >
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="healthCard != null" >
        health_card = #{healthCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="emergencyPhone != null" >
        emergency_phone = #{emergencyPhone,jdbcType=VARCHAR},
      </if>
      <if test="baseSalaries != null" >
        base_salaries = #{baseSalaries,jdbcType=INTEGER},
      </if>
      <if test="positionSalaries != null" >
        position_salaries = #{positionSalaries,jdbcType=INTEGER},
      </if>
      <if test="employeeStatus != null" >
        employee_status = #{employeeStatus,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null" >
        entry_date = #{entryDate,jdbcType=CHAR},
      </if>
      <if test="leaveDate != null" >
        leave_date = #{leaveDate,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  
  <!-- 判断员工编码是否被引用了 -->
  <select id="queryEmployeeCode" parameterType="java.util.Map" resultType="com.zefun.web.entity.EmployeeInfo">
  select employee_id employeeId from employee_info where employee_code=#{employeeCode} and store_id = #{storeId} and is_deleted=0
  </select>
  <!-- 员工推荐关系录入 -->
  <insert id="employeeRecommend" parameterType="java.util.Map">
  insert into employee_recommend (recommend_id, employee_id, referrer_id, 
      create_time, update_time, last_operator_id)
    values (#{recommendId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{referrerId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, #{lastOperatorId,jdbcType=INTEGER})
  </insert>
  <!-- 删除员工关系信息 -->
  <delete id="deleteRecommend"  parameterType="java.lang.Integer">
  delete from employee_recommend where employee_id = #{employeeId} 
  </delete>
  <!-- 删除员工的培训经历 -->
  <delete id="deletepx" parameterType="java.lang.Integer">
  delete from employee_education where employee_id = #{employeeId} 
  </delete>
  
  <insert id="addpx" parameterType="java.util.Map">
  insert into employee_education (education_id, employee_id, start_date, 
      end_date, education_institution, education_content, 
      education_performance, create_time, update_time, 
      last_operator_id)
    values (#{educationId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{startDate,jdbcType=CHAR}, 
      #{endDate,jdbcType=CHAR}, #{educationInstitution,jdbcType=VARCHAR}, #{educationContent,jdbcType=VARCHAR}, 
      #{educationPerformance,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, 
      #{lastOperatorId,jdbcType=INTEGER})
  </insert>
  <!-- 删除员工的工作经历 -->
  <delete id="deletegz" parameterType="java.lang.Integer">
  delete from employee_experience where employee_id = #{employeeId} 
  </delete>
  <!-- 新增工作经验 -->
  <insert id="addgz" parameterType="java.util.Map">
  insert into employee_experience (experience_id, employee_id, start_date, 
      end_date, company_name, position_name, 
      experience_desc, create_time, update_time, 
      last_operator_id)
    values (#{experienceId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{startDate,jdbcType=CHAR}, 
      #{endDate,jdbcType=CHAR}, #{companyName,jdbcType=VARCHAR}, #{positionName,jdbcType=VARCHAR}, 
      #{experienceDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, 
      #{lastOperatorId,jdbcType=INTEGER})
      </insert>
    <!-- 新增员工擅长技能 -->
   <insert id="addsc" parameterType="java.util.Map"> 
    insert into employee_skill (skill_id, employee_id, category_name, 
    skill_name, skill_desc, create_time, 
    update_time, last_operator_id)
  values (#{skillId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, 
    #{skillName,jdbcType=VARCHAR}, #{skillDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, 
    #{updateTime,jdbcType=CHAR}, #{lastOperatorId,jdbcType=INTEGER})
    </insert>
    <!-- 删除员工的擅长技能 -->
  <delete id="deletesc" parameterType="java.lang.Integer">
  delete from employee_skill where employee_id = #{employeeId} 
  </delete>
  <!-- c查询员工详情 -->
  <select id="getDetail" parameterType="java.lang.Integer" resultType="java.util.Map">
	select t.employee_id employeeId,t.employee_code employeeCode,t.name, t.store_id storeId, t.dept_id
	deptId,dept_name deptName,t.position_id positionId,p.position_name positionName,t.level_id levelId,l.level_name levelName,t.sex,t.phone,t.recommend_id
	recommendId,t.head_image
	headImage,t.birthday,t.identity_card identityCard,
	t.health_card healthCard,t.recommend_id recommendId,e.name recommend,t.address ,t.emergency_phone
	emergencyPhone ,t.entry_date entryDate,t.leave_date leaveDate
	,t.employee_status employeeStatus,t.base_salaries baseSalaries
	,t.position_salaries positionSalaries ,t.employee_desc employeeDesc from employee_info t
    left join dept_info d on d.dept_id=t.dept_id
    left join employee_level l on l.level_id=t.level_id
    left join position_info p on p.position_id=t.position_id
    left join employee_info e on e.employee_id=t.employee_id
	where t.employee_id = #{employeeId}
  </select>
  <!-- 查询员工培训信息 -->
  <select id="querypx" parameterType="java.lang.Integer" resultType="java.util.Map">
  select start_date startDate,end_date endDate,education_institution educationInstitution,education_content educationContent,education_performance educationPerformance from employee_education where employee_id=#{employeeId}
  </select>
  <!-- 获取工作信息列表 -->
  <select id="querygz" parameterType="java.lang.Integer" resultType="java.util.Map">
  select start_date startDate,end_date endDate,company_name companyName,position_name positionName,experience_desc experienceDesc from employee_experience where employee_id=#{employeeId}
  </select>
  <!-- 获取擅长信息列表 -->
  <select id="querysc"  parameterType="java.lang.Integer" resultType="java.util.Map">
  select category_name categoryName,skill_name skillName,skill_desc skillDesc from employee_skill where employee_id=#{employeeId}
  </select>
  <!-- 获取员工推荐人信息 -->
  <select id="getreferrer" parameterType="java.lang.Integer" resultType="java.util.Map">
  select i.name,i.employee_code employeeCode,i.head_image headImage from  employee_info i 
	left join employee_recommend r on r.referrer_id=i.employee_id
	where r.employee_id=#{employeeId} and i.dept_id>0
  </select>
  <!-- 获取被推荐的人信息 -->
  <select id="getrecommended" parameterType="java.lang.Integer" resultType="java.util.Map">
	select i.name,i.employee_code employeeCode,i.head_image headImage from  employee_info i 
	left join employee_recommend r on r.employee_id=i.employee_id
	where r.referrer_id=#{employeeId} and i.dept_id>0
  </select>
  <!-- 获取会员基本信息 -->
  <select id="selectEmployeeBaseInfo" parameterType="java.lang.Integer" resultType="com.zefun.web.dto.EmployeeDto">
    select t.employee_id employeeId,t.employee_code employeeCode,t.name,p.position_name positionName,l.level_name levelName,t.sex,t.head_image headImage,t.phone,t.entry_date entryDate,t.employee_status employeeStatus,t.base_salaries baseSalaries  from employee_info t 
	left join position_info p on p.position_id=t.position_id
	left join employee_level l on l.level_id=t.level_id where t.employee_id = #{employeeId}
  </select>
  <!-- 根据部门标识获取人员数据 -->
  <select id="getDeptEmployee" parameterType="java.lang.Integer" resultType="com.zefun.web.dto.EmployeeDto">
  select i.employee_id employeeId,i.name from employee_info i
    left join position_info p on p.position_id=i.position_id
    left join dept_info d on d.dept_id=p.dept_id
    where d.dept_id=#{deptId} and i.is_deleted=0
</select> 
  <!-- 根据门店标识查询门店下所有员工信息 -->
  <select id="selectEmployeeList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_info
    where store_id = #{storeId,jdbcType=INTEGER} and is_deleted = 0 and dept_id>0
  </select>
  
  <!-- 定时任务 获取所有在的人员-->
  <select id="getAllemployee" resultType="java.util.Map">
  select employee_id employeeId,store_id storeId from employee_info where  is_deleted=0 and employee_status=1 and dept_id>0
  </select>

  <!-- 新增派遣 -->
  <insert id="adddispatch" parameterType="java.util.Map">
  insert into dispatch_info (dispatch_id, employee_id, store_id, 
      p_store_id, dispatch_time, create_time, 
      operator_id)
    values (#{dispatchId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{pStoreId,jdbcType=INTEGER}, #{dispatchTime,jdbcType=CHAR}, #{createTime,jdbcType=CHAR}, 
      #{operatorId,jdbcType=INTEGER})
  </insert>
  <select id="getpqlist" parameterType="java.lang.Integer" resultType="java.util.Map">
  select store_name pStoreName,dispatch_time dispatchTime from dispatch_info d
	left join store_info s on d.p_store_id=s.store_id
	where employee_id=#{employeeId}
  </select>
  
  <update id="updatestatus" parameterType="java.util.Map">
  update employee_info set employee_status=#{employeeStatus} where employee_id=#{employeeId}
  </update>
  
  <select id="queryEmployeeList" parameterType="java.util.Map" resultType="com.zefun.web.dto.EmployeeDto">
  select t.employee_id employeeId,t.employee_code employeeCode,t.name,p.position_name positionName,l.level_name levelName,t.sex,t.phone,t.entry_date entryDate,t.employee_status employeeStatus,t.base_salaries baseSalaries  from employee_info t 
	left join position_info p on p.position_id=t.position_id
	left join employee_level l on l.level_id=t.level_id where t.store_id=#{storeId} and t.dept_id>0
  </select>
  
  <update id="deleteEmployee" parameterType="java.lang.Integer">
  update employee_info set is_deleted=1 where employee_id=#{employeeId}
  </update>
  <update id="deleteUser" parameterType="java.lang.Integer">
   update user_account set status ='1' WHERE user_id=#{employeeId}
  </update>
  <insert id="insertList" parameterType="com.zefun.web.dto.EmployeeDto" useGeneratedKeys = "true" keyProperty="employeeId">
  insert into employee_info (employee_id, store_id,dept_id, position_id, 
      level_id, recommend_id, employee_code, 
      name, head_image, sex, 
      birthday, phone, identity_card, 
      health_card, address, emergency_phone, 
      base_salaries, position_salaries, employee_status, 
      entry_date, leave_date, create_time, 
      update_time, is_deleted, last_operator_id,
      accredit_code)
    values 
(#{employeeId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER},#{deptId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, 
      #{levelId,jdbcType=INTEGER}, #{recommendId,jdbcType=INTEGER}, #{employeeCode,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{birthday,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, #{identityCard,jdbcType=VARCHAR}, 
      #{healthCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{emergencyPhone,jdbcType=VARCHAR}, 
      #{baseSalaries,jdbcType=INTEGER}, #{positionSalaries,jdbcType=INTEGER}, #{employeeStatus,jdbcType=VARCHAR}, 
      #{entryDate,jdbcType=CHAR}, #{leaveDate,jdbcType=CHAR}, #{createTime,jdbcType=CHAR}, 
      #{updateTime,jdbcType=CHAR}, 0, #{lastOperatorId,jdbcType=INTEGER}, 
      #{accreditCode,jdbcType=INTEGER})
  </insert>
  
  <select id="getEmployeeDetail" parameterType="java.util.Map" resultType="com.zefun.web.dto.EmployeeDto">
  select employee_id employeeId,dept_id deptId from employee_info 
  where employee_code=#{employeeCode} 
  and store_id = #{storeId} and is_deleted=0
  </select>
  
  <!--  根据员工标识查询该员工对应岗位下的所有员工 -->
  <select id="selectEmployeeInfoByEmployeeIdPositionId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     select 
        a.employee_id
     from employee_info a
     where a.is_deleted=0 
     and exists(
                 select 
                     1 
                 from employee_info b 
                 where b.employee_id = #{employeeId,jdbcType=INTEGER} 
                 and b.position_id = a.position_id 
                 and b.is_deleted = 0
                )
  </select>
</mapper>