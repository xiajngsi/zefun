<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.AccountTransferMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.AccountTransfer" >
    <id column="transfer_id" property="transferId" jdbcType="INTEGER" />
    <result column="out_account_id" property="outAccountId" jdbcType="INTEGER" />
    <result column="in_account_id" property="inAccountId" jdbcType="INTEGER" />
    <result column="transfer_amount" property="transferAmount" jdbcType="DECIMAL" />
    <result column="transfer_time" property="transferTime" jdbcType="CHAR" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    transfer_id, out_account_id, in_account_id, transfer_amount, transfer_time, operator_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_transfer
    where transfer_id = #{transferId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_transfer
    where transfer_id = #{transferId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.AccountTransfer" >
    insert into account_transfer (transfer_id, out_account_id, in_account_id, 
      transfer_amount, transfer_time, operator_id
      )
    values (#{transferId,jdbcType=INTEGER}, #{outAccountId,jdbcType=INTEGER}, #{inAccountId,jdbcType=INTEGER}, 
      #{transferAmount,jdbcType=DECIMAL}, #{transferTime,jdbcType=CHAR}, #{operatorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.AccountTransfer" >
    insert into account_transfer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transferId != null" >
        transfer_id,
      </if>
      <if test="outAccountId != null" >
        out_account_id,
      </if>
      <if test="inAccountId != null" >
        in_account_id,
      </if>
      <if test="transferAmount != null" >
        transfer_amount,
      </if>
      <if test="transferTime != null" >
        transfer_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transferId != null" >
        #{transferId,jdbcType=INTEGER},
      </if>
      <if test="outAccountId != null" >
        #{outAccountId,jdbcType=INTEGER},
      </if>
      <if test="inAccountId != null" >
        #{inAccountId,jdbcType=INTEGER},
      </if>
      <if test="transferAmount != null" >
        #{transferAmount,jdbcType=DECIMAL},
      </if>
      <if test="transferTime != null" >
        #{transferTime,jdbcType=CHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.AccountTransfer" >
    update account_transfer
    <set >
      <if test="outAccountId != null" >
        out_account_id = #{outAccountId,jdbcType=INTEGER},
      </if>
      <if test="inAccountId != null" >
        in_account_id = #{inAccountId,jdbcType=INTEGER},
      </if>
      <if test="transferAmount != null" >
        transfer_amount = #{transferAmount,jdbcType=DECIMAL},
      </if>
      <if test="transferTime != null" >
        transfer_time = #{transferTime,jdbcType=CHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
    </set>
    where transfer_id = #{transferId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.AccountTransfer" >
    update account_transfer
    set out_account_id = #{outAccountId,jdbcType=INTEGER},
      in_account_id = #{inAccountId,jdbcType=INTEGER},
      transfer_amount = #{transferAmount,jdbcType=DECIMAL},
      transfer_time = #{transferTime,jdbcType=CHAR},
      operator_id = #{operatorId,jdbcType=INTEGER}
    where transfer_id = #{transferId,jdbcType=INTEGER}
  </update>
</mapper>