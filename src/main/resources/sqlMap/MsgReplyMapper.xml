<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.MsgReplyMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.MsgReply" >
    <id column="msg_id" property="msgId" jdbcType="INTEGER" />
    <result column="msg_type" property="msgType" jdbcType="VARCHAR" />
    <result column="msg_text" property="msgText" jdbcType="VARCHAR" />
    <result column="media_id" property="mediaId" jdbcType="VARCHAR" />
    <result column="msg_status" property="msgStatus" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    msg_id, msg_type, msg_text, media_id, msg_status, store_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from msg_reply
    where msg_id = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from msg_reply
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.MsgReply" >
    insert into msg_reply (msg_id, msg_type, msg_text, 
      media_id, msg_status, store_id
      )
    values (#{msgId,jdbcType=INTEGER}, #{msgType,jdbcType=VARCHAR}, #{msgText,jdbcType=VARCHAR}, 
      #{mediaId,jdbcType=VARCHAR}, #{msgStatus,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.MsgReply" >
    insert into msg_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="msgType != null" >
        msg_type,
      </if>
      <if test="msgText != null" >
        msg_text,
      </if>
      <if test="mediaId != null" >
        media_id,
      </if>
      <if test="msgStatus != null" >
        msg_status,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=INTEGER},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="msgText != null" >
        #{msgText,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null" >
        #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="msgStatus != null" >
        #{msgStatus,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.MsgReply" >
    update msg_reply
    <set >
      <if test="msgType != null" >
        msg_type = #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="msgText != null" >
        msg_text = #{msgText,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null" >
        media_id = #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="msgStatus != null" >
        msg_status = #{msgStatus,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.MsgReply" >
    update msg_reply
    set msg_type = #{msgType,jdbcType=VARCHAR},
      msg_text = #{msgText,jdbcType=VARCHAR},
      media_id = #{mediaId,jdbcType=VARCHAR},
      msg_status = #{msgStatus,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义方法 -->
  <select id="selectReplyByParam" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from msg_reply
    where store_id = #{storeId,jdbcType=INTEGER} 
    and msg_status = #{msgStatus,jdbcType=INTEGER} 
  </select>
  <delete id="deleteByParam" parameterType="java.util.Map">
    delete from msg_reply
    where store_id = #{storeId,jdbcType=INTEGER} and msg_status = #{msgStatus,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByMediaId" parameterType="java.lang.String">
  	delete from msg_reply where media_id = #{mediaId}
  </delete>
</mapper>