<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.AccountChargeMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.AccountCharge" >
    <id column="charge_id" property="chargeId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="charge_amount" property="chargeAmount" jdbcType="DECIMAL" />
    <result column="charge_time" property="chargeTime" jdbcType="CHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    charge_id, account_id, charge_amount, charge_time, store_id, operator_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_charge
    where charge_id = #{chargeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_charge
    where charge_id = #{chargeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.AccountCharge" >
    insert into account_charge (charge_id, account_id, charge_amount, 
      charge_time, store_id, operator_id)
    values (#{chargeId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{chargeAmount,jdbcType=DECIMAL}, 
      #{chargeTime,jdbcType=CHAR}, #{storeId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.AccountCharge" >
    insert into account_charge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="chargeId != null" >
        charge_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="chargeAmount != null" >
        charge_amount,
      </if>
      <if test="chargeTime != null" >
        charge_time,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="chargeId != null" >
        #{chargeId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="chargeAmount != null" >
        #{chargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="chargeTime != null" >
        #{chargeTime,jdbcType=CHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.AccountCharge" >
    update account_charge
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="chargeAmount != null" >
        charge_amount = #{chargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="chargeTime != null" >
        charge_time = #{chargeTime,jdbcType=CHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
    </set>
    where charge_id = #{chargeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.AccountCharge" >
    update account_charge
    set account_id = #{accountId,jdbcType=INTEGER},
      charge_amount = #{chargeAmount,jdbcType=DECIMAL},
      charge_time = #{chargeTime,jdbcType=CHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER}
    where charge_id = #{chargeId,jdbcType=INTEGER}
  </update>
</mapper>