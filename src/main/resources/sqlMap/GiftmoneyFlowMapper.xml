<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.GiftmoneyFlowMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.GiftmoneyFlow" >
    <id column="flow_id" property="flowId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="flow_type" property="flowType" jdbcType="INTEGER" />
    <result column="residue_money_info" property="residueMoneyInfo" jdbcType="VARCHAR" />
    <result column="flow_amount" property="flowAmount" jdbcType="DECIMAL" />
    <result column="business_type" property="businessType" jdbcType="VARCHAR" />
    <result column="business_desc" property="businessDesc" jdbcType="VARCHAR" />
    <result column="flow_time" property="flowTime" jdbcType="CHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    flow_id, account_id, detail_id, flow_type, residue_money_info, flow_amount, business_type, business_desc, 
    flow_time, is_deleted
  </sql>
  
  <select id="selectFlowlistByAccountId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
    from giftmoney_flow
    where account_id = #{accountId} order by flow_time desc
  </select>
  
  <select id="selectByDetailId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from giftmoney_flow
    where detail_id = #{detailId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from giftmoney_flow
    where flow_id = #{flowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from giftmoney_flow
    where flow_id = #{flowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.GiftmoneyFlow" >
    insert into giftmoney_flow (flow_id, account_id, detail_id, 
      flow_type, residue_money_info, flow_amount, business_type, 
      business_desc, flow_time, is_deleted
      )
    values (#{flowId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{detailId,jdbcType=INTEGER}, 
      #{flowType,jdbcType=INTEGER}, #{residueMoneyInfo,jdbcType=VARCHAR}, #{flowAmount,jdbcType=DECIMAL}, #{businessType,jdbcType=VARCHAR}, 
      #{businessDesc,jdbcType=VARCHAR}, #{flowTime,jdbcType=CHAR}, #{isDeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.GiftmoneyFlow" >
    insert into giftmoney_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="flowId != null" >
        flow_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="flowType != null" >
        flow_type,
      </if>
      <if test="residueMoneyInfo != null" >
        residue_money_info,
      </if>
      <if test="flowAmount != null" >
        flow_amount,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="businessDesc != null" >
        business_desc,
      </if>
      <if test="flowTime != null" >
        flow_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="flowId != null" >
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null" >
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        #{flowType,jdbcType=INTEGER},
      </if>
      <if test="residueMoneyInfo != null" >
        #{residueMoneyInfo,jdbcType=VARCHAR},
      </if>
      <if test="flowAmount != null" >
        #{flowAmount,jdbcType=DECIMAL},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="businessDesc != null" >
        #{businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="flowTime != null" >
        #{flowTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.GiftmoneyFlow" >
    update giftmoney_flow
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null" >
        detail_id = #{detailId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        flow_type = #{flowType,jdbcType=INTEGER},
      </if>
      <if test="residueMoneyInfo != null" >
        residue_money_info = #{residueMoneyInfo,jdbcType=VARCHAR},
      </if>
      <if test="flowAmount != null" >
        flow_amount = #{flowAmount,jdbcType=DECIMAL},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="businessDesc != null" >
        business_desc = #{businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="flowTime != null" >
        flow_time = #{flowTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where flow_id = #{flowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.GiftmoneyFlow" >
    update giftmoney_flow
    set account_id = #{accountId,jdbcType=INTEGER},
      detail_id = #{detailId,jdbcType=INTEGER},
      flow_type = #{flowType,jdbcType=INTEGER},
      residue_money_info = #{residueMoneyInfo,jdbcType=VARCHAR},
      flow_amount = #{flowAmount,jdbcType=DECIMAL},
      business_type = #{businessType,jdbcType=VARCHAR},
      business_desc = #{businessDesc,jdbcType=VARCHAR},
      flow_time = #{flowTime,jdbcType=CHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where flow_id = #{flowId,jdbcType=INTEGER}
  </update>
</mapper>