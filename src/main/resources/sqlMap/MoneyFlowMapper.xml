<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.MoneyFlowMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.MoneyFlow" >
    <id column="flow_id" property="flowId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="flow_type" property="flowType" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="flow_amount" property="flowAmount" jdbcType="DECIMAL" />
    <result column="balance_amount" property="balanceAmount" jdbcType="DECIMAL" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="business_desc" property="businessDesc" jdbcType="VARCHAR" />
    <result column="flow_time" property="flowTime" jdbcType="CHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="MoneyFlowDtoMap" type="com.zefun.web.dto.MoneyFlowDto" >
    <id column="flow_id" property="flowId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="flow_type" property="flowType" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="flow_amount" property="flowAmount" jdbcType="DECIMAL" />
    <result column="balance_amount" property="balanceAmount" jdbcType="DECIMAL" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="orderName" property="orderName" jdbcType="VARCHAR" />
    <result column="business_desc" property="businessDesc" jdbcType="VARCHAR" />
    <result column="flow_time" property="flowTime" jdbcType="CHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="storeName" property="storeName" jdbcType="VARCHAR" />
    <result column="lastOperatorName" property="lastOperatorName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    flow_id, account_id, flow_type, business_type, flow_amount, balance_amount, order_id, 
    business_desc, flow_time, is_deleted, store_id, last_operator_id
  </sql>
  
  <select id="selectFlowListByMemberId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
    from money_flow
    where account_id = #{memberId,jdbcType=INTEGER} order by flow_time desc
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from money_flow
    where flow_id = #{flowId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByOrderId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from money_flow
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from money_flow
    where flow_id = #{flowId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.zefun.web.entity.MoneyFlow" >
    insert into money_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="flowId != null" >
        flow_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="flowType != null" >
        flow_type,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="flowAmount != null" >
        flow_amount,
      </if>
      <if test="balanceAmount != null" >
        balance_amount,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="businessDesc != null" >
        business_desc,
      </if>
      <if test="flowTime != null" >
        flow_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="flowId != null" >
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        #{flowType,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="flowAmount != null" >
        #{flowAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceAmount != null" >
        #{balanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="businessDesc != null" >
        #{businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="flowTime != null" >
        #{flowTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.MoneyFlow" >
    update money_flow
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        flow_type = #{flowType,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="flowAmount != null" >
        flow_amount = #{flowAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceAmount != null" >
        balance_amount = #{balanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="businessDesc != null" >
        business_desc = #{businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="flowTime != null" >
        flow_time = #{flowTime,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where flow_id = #{flowId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPage" resultMap = "MoneyFlowDtoMap" parameterType="com.zefun.web.entity.Page">
  	select 
  	    a.*,b.store_name as storeName, c.phone as name, c.sex as sex, 
		case when a.business_type = 3 then (select e.phone FROM member_info e where exists(select * FROM member_account h where e.member_id = h.account_id and h.account_id = a.order_id)) 
		when a.business_type = 1 then (select f.order_code FROM order_info f where f.order_id = a.order_id) 
		when a.business_type in (2,4) then '本人'
		end as orderName, 
		(select h.name FROM employee_info h where h.employee_id = a.last_operator_id) as lastOperatorName
	from 
	    money_flow a, store_info b, member_info c 
    where a.store_id = b.store_id and a.is_deleted = 0 and c.member_id = #{params.memberId}
		  and exists(select 1 FROM member_account d where d.account_id = a.account_id and d.account_id = #{params.memberId}) 
    order by flow_time desc
  </select>
  
  <!--  根据会员标识查询转出记录 -->
  <select id="selectDetail" resultMap = "MoneyFlowDtoMap" parameterType="java.util.Map">
  	select 
  	    a.*,b.store_name as storeName, c.phone as name, c.sex as sex, 
		case when a.business_type = 3 then (select e.phone FROM member_info e where exists(select * from member_account h where e.member_id = h.account_id and h.account_id = a.order_id)) 
		when a.business_type = 1 then (select f.order_code FROM order_info f where f.order_id = a.order_id) 
		when a.business_type in (2,4) then '本人'
		end as orderName, (select h.name FROM employee_info h where h.employee_id = a.last_operator_id) as lastOperatorName
	from 
	    money_flow a, store_info b, member_info c 
    where a.store_id = b.store_id and a.is_deleted = 0 and a.business_type = #{businessType, jdbcType=INTEGER} and c.member_id = #{memberId, jdbcType=INTEGER}
		  and exists(select 1 FROM member_account d where d.account_id = a.account_id and d.account_id = #{memberId, jdbcType=INTEGER}) 
    order by flow_time desc limit 4
  </select>
</mapper>